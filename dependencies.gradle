buildscript {
    ext {
        kotlin_version = '1.3.20'
        android_plugin_version = '3.3.0'

        pluginDependencies = [
                android                  : "com.android.tools.build:gradle:$android_plugin_version",
                kotlin                   : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
                kotlin_android_extensions: "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        ]
    }
}


ext {
    dagger_version = '2.21'
    support_version = '28.0.0'
    okhttp_version = '3.12.1'
    retrofit_version = '2.5.0'
    gson_version = "2.8.5"
    glide_version = "4.8.0"
    eventbus_version = "3.1.1"
    swagger_annotations_version = "1.5.0"
    oltu_version = "1.0.0"
    test_support_version = '1.0.2'
    junit_version = "4.12"
    mockito_version = "2.23.4"
    espresso_version = "3.0.2"
    robolectric_version = "4.1"
    room_version = '1.1.1'

    kotlinDependencies = [
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    ]

    supportDependencies = [
            appcompat : 'androidx.appcompat:appcompat:1.0.0',
            cardview  : 'androidx.cardview:cardview:1.0.0',
            design    : 'com.google.android.material:material:1.0.0',
            constraint: 'androidx.constraintlayout:constraintlayout:1.1.3'
    ]

    toolkitDependencies = [
            okhttp               : "com.squareup.okhttp3:okhttp:$okhttp_version",
            logging              : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",


            retrofit             : "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:$retrofit_version",
            gson                 : "com.google.code.gson:gson:$gson_version",

            glide                : "com.github.bumptech.glide:glide:$glide_version",
            eventbus             : "org.greenrobot:eventbus:$eventbus_version"
    ]

    daggerDependencies = [
            dagger    : "com.google.dagger:dagger:$dagger_version",
            compiler  : "com.google.dagger:dagger-compiler:$dagger_version",
            annotation: 'javax.annotation:jsr250-api:1.0',   // Required for @Generated annotation
            testApt: "com.google.dagger:dagger-compiler:$dagger_version"
    ]

    unitTestDependencies = [
            junit      : "junit:junit:$junit_version",
            robolectric: "org.robolectric:robolectric:$robolectric_version",
            mockito    : "org.mockito:mockito-core:$mockito_version",
    ]

    instrumentationTestDependencies = [
            mockito               : "org.mockito:mockito-core:$mockito_version",
            supportRunner         : 'androidx.test.ext:junit:1.1.1',
            supportRules          : 'androidx.test:rules:1.1.1',
            supportAnnotations    : 'androidx.annotation:annotation:1.0.0',
            espresso              : 'androidx.test.espresso:espresso-core:3.1.0',
            espressoIdlingResource: 'androidx.test.espresso:espresso-idling-resource:3.1.0',
            espressoIntents       : 'androidx.test.espresso:espresso-intents:3.1.0'
    ]

    swaggerDependecies = [
            annotation: "io.swagger:swagger-annotations:$swagger_annotations_version",
            auth      : "org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oltu_version"

    ]

    roomDependencies = [
            room        : 'androidx.room:room-runtime:2.0.0',
            roomCompiler: 'androidx.room:room-compiler:2.0.0'
    ]

}

subprojects {
    configurations {
        compile.exclude group: "com.google.code.findbugs", module: "jsr305"
        // Required for Espresso
        compile.exclude group: "commons-logging", module: "commons-logging"
        // Required for Robolectric
        compile.exclude group: "org.apache.httpcomponents", module: "httpclient"
        // Required for Robolectric

    }
}